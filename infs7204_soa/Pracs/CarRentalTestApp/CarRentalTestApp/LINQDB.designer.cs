#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CarRentalTestApp
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="CarRentalDatabase")]
	public partial class LINQDBDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertVehicleCategory(VehicleCategory instance);
    partial void UpdateVehicleCategory(VehicleCategory instance);
    partial void DeleteVehicleCategory(VehicleCategory instance);
    partial void InsertModel(Model instance);
    partial void UpdateModel(Model instance);
    partial void DeleteModel(Model instance);
    partial void InsertManufacturer(Manufacturer instance);
    partial void UpdateManufacturer(Manufacturer instance);
    partial void DeleteManufacturer(Manufacturer instance);
    partial void InsertVehicle(Vehicle instance);
    partial void UpdateVehicle(Vehicle instance);
    partial void DeleteVehicle(Vehicle instance);
    partial void InsertCustomer(Customer instance);
    partial void UpdateCustomer(Customer instance);
    partial void DeleteCustomer(Customer instance);
    partial void InsertBookingStatus(BookingStatus instance);
    partial void UpdateBookingStatus(BookingStatus instance);
    partial void DeleteBookingStatus(BookingStatus instance);
    partial void InsertBooking(Booking instance);
    partial void UpdateBooking(Booking instance);
    partial void DeleteBooking(Booking instance);
    #endregion
		
		public LINQDBDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["CarRentalDatabaseConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public LINQDBDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LINQDBDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LINQDBDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LINQDBDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<VehicleCategory> VehicleCategories
		{
			get
			{
				return this.GetTable<VehicleCategory>();
			}
		}
		
		public System.Data.Linq.Table<Model> Models
		{
			get
			{
				return this.GetTable<Model>();
			}
		}
		
		public System.Data.Linq.Table<Manufacturer> Manufacturers
		{
			get
			{
				return this.GetTable<Manufacturer>();
			}
		}
		
		public System.Data.Linq.Table<Vehicle> Vehicles
		{
			get
			{
				return this.GetTable<Vehicle>();
			}
		}
		
		public System.Data.Linq.Table<Customer> Customers
		{
			get
			{
				return this.GetTable<Customer>();
			}
		}
		
		public System.Data.Linq.Table<BookingStatus> BookingStatus
		{
			get
			{
				return this.GetTable<BookingStatus>();
			}
		}
		
		public System.Data.Linq.Table<Booking> Bookings
		{
			get
			{
				return this.GetTable<Booking>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.VehicleCategory")]
	public partial class VehicleCategory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _vehicle_category_code;
		
		private string _vehicle_category_description;
		
		private EntitySet<Vehicle> _Vehicles;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onvehicle_category_codeChanging(string value);
    partial void Onvehicle_category_codeChanged();
    partial void Onvehicle_category_descriptionChanging(string value);
    partial void Onvehicle_category_descriptionChanged();
    #endregion
		
		public VehicleCategory()
		{
			this._Vehicles = new EntitySet<Vehicle>(new Action<Vehicle>(this.attach_Vehicles), new Action<Vehicle>(this.detach_Vehicles));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_vehicle_category_code", DbType="VarChar(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string vehicle_category_code
		{
			get
			{
				return this._vehicle_category_code;
			}
			set
			{
				if ((this._vehicle_category_code != value))
				{
					this.Onvehicle_category_codeChanging(value);
					this.SendPropertyChanging();
					this._vehicle_category_code = value;
					this.SendPropertyChanged("vehicle_category_code");
					this.Onvehicle_category_codeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_vehicle_category_description", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string vehicle_category_description
		{
			get
			{
				return this._vehicle_category_description;
			}
			set
			{
				if ((this._vehicle_category_description != value))
				{
					this.Onvehicle_category_descriptionChanging(value);
					this.SendPropertyChanging();
					this._vehicle_category_description = value;
					this.SendPropertyChanged("vehicle_category_description");
					this.Onvehicle_category_descriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="VehicleCategory_Vehicle", Storage="_Vehicles", ThisKey="vehicle_category_code", OtherKey="vehicle_category_code")]
		public EntitySet<Vehicle> Vehicles
		{
			get
			{
				return this._Vehicles;
			}
			set
			{
				this._Vehicles.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Vehicles(Vehicle entity)
		{
			this.SendPropertyChanging();
			entity.VehicleCategory = this;
		}
		
		private void detach_Vehicles(Vehicle entity)
		{
			this.SendPropertyChanging();
			entity.VehicleCategory = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Model")]
	public partial class Model : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _model_code;
		
		private string _body_style;
		
		private bool _automatic;
		
		private int _passenger_capacity;
		
		private EntitySet<Vehicle> _Vehicles;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onmodel_codeChanging(string value);
    partial void Onmodel_codeChanged();
    partial void Onbody_styleChanging(string value);
    partial void Onbody_styleChanged();
    partial void OnautomaticChanging(bool value);
    partial void OnautomaticChanged();
    partial void Onpassenger_capacityChanging(int value);
    partial void Onpassenger_capacityChanged();
    #endregion
		
		public Model()
		{
			this._Vehicles = new EntitySet<Vehicle>(new Action<Vehicle>(this.attach_Vehicles), new Action<Vehicle>(this.detach_Vehicles));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_model_code", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string model_code
		{
			get
			{
				return this._model_code;
			}
			set
			{
				if ((this._model_code != value))
				{
					this.Onmodel_codeChanging(value);
					this.SendPropertyChanging();
					this._model_code = value;
					this.SendPropertyChanged("model_code");
					this.Onmodel_codeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_body_style", DbType="VarChar(20)")]
		public string body_style
		{
			get
			{
				return this._body_style;
			}
			set
			{
				if ((this._body_style != value))
				{
					this.Onbody_styleChanging(value);
					this.SendPropertyChanging();
					this._body_style = value;
					this.SendPropertyChanged("body_style");
					this.Onbody_styleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_automatic", DbType="Bit NOT NULL")]
		public bool automatic
		{
			get
			{
				return this._automatic;
			}
			set
			{
				if ((this._automatic != value))
				{
					this.OnautomaticChanging(value);
					this.SendPropertyChanging();
					this._automatic = value;
					this.SendPropertyChanged("automatic");
					this.OnautomaticChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_passenger_capacity", DbType="Int NOT NULL")]
		public int passenger_capacity
		{
			get
			{
				return this._passenger_capacity;
			}
			set
			{
				if ((this._passenger_capacity != value))
				{
					this.Onpassenger_capacityChanging(value);
					this.SendPropertyChanging();
					this._passenger_capacity = value;
					this.SendPropertyChanged("passenger_capacity");
					this.Onpassenger_capacityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Model_Vehicle", Storage="_Vehicles", ThisKey="model_code", OtherKey="model_code")]
		public EntitySet<Vehicle> Vehicles
		{
			get
			{
				return this._Vehicles;
			}
			set
			{
				this._Vehicles.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Vehicles(Vehicle entity)
		{
			this.SendPropertyChanging();
			entity.Model = this;
		}
		
		private void detach_Vehicles(Vehicle entity)
		{
			this.SendPropertyChanging();
			entity.Model = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Manufacturer")]
	public partial class Manufacturer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _manufacturer_code;
		
		private string _manufacturer_name;
		
		private EntitySet<Vehicle> _Vehicles;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onmanufacturer_codeChanging(string value);
    partial void Onmanufacturer_codeChanged();
    partial void Onmanufacturer_nameChanging(string value);
    partial void Onmanufacturer_nameChanged();
    #endregion
		
		public Manufacturer()
		{
			this._Vehicles = new EntitySet<Vehicle>(new Action<Vehicle>(this.attach_Vehicles), new Action<Vehicle>(this.detach_Vehicles));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_manufacturer_code", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string manufacturer_code
		{
			get
			{
				return this._manufacturer_code;
			}
			set
			{
				if ((this._manufacturer_code != value))
				{
					this.Onmanufacturer_codeChanging(value);
					this.SendPropertyChanging();
					this._manufacturer_code = value;
					this.SendPropertyChanged("manufacturer_code");
					this.Onmanufacturer_codeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_manufacturer_name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string manufacturer_name
		{
			get
			{
				return this._manufacturer_name;
			}
			set
			{
				if ((this._manufacturer_name != value))
				{
					this.Onmanufacturer_nameChanging(value);
					this.SendPropertyChanging();
					this._manufacturer_name = value;
					this.SendPropertyChanged("manufacturer_name");
					this.Onmanufacturer_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Manufacturer_Vehicle", Storage="_Vehicles", ThisKey="manufacturer_code", OtherKey="manufacturer_code")]
		public EntitySet<Vehicle> Vehicles
		{
			get
			{
				return this._Vehicles;
			}
			set
			{
				this._Vehicles.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Vehicles(Vehicle entity)
		{
			this.SendPropertyChanging();
			entity.Manufacturer = this;
		}
		
		private void detach_Vehicles(Vehicle entity)
		{
			this.SendPropertyChanging();
			entity.Manufacturer = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Vehicle")]
	public partial class Vehicle : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _vehicle_id;
		
		private string _registration_number;
		
		private string _manufacturer_code;
		
		private string _model_code;
		
		private string _vehicle_category_code;
		
		private string _manufacturing_date;
		
		private decimal _daily_hire_rate;
		
		private int _availability;
		
		private string _current_city;
		
		private EntitySet<Booking> _Bookings;
		
		private EntityRef<Manufacturer> _Manufacturer;
		
		private EntityRef<Model> _Model;
		
		private EntityRef<VehicleCategory> _VehicleCategory;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onvehicle_idChanging(int value);
    partial void Onvehicle_idChanged();
    partial void Onregistration_numberChanging(string value);
    partial void Onregistration_numberChanged();
    partial void Onmanufacturer_codeChanging(string value);
    partial void Onmanufacturer_codeChanged();
    partial void Onmodel_codeChanging(string value);
    partial void Onmodel_codeChanged();
    partial void Onvehicle_category_codeChanging(string value);
    partial void Onvehicle_category_codeChanged();
    partial void Onmanufacturing_dateChanging(string value);
    partial void Onmanufacturing_dateChanged();
    partial void Ondaily_hire_rateChanging(decimal value);
    partial void Ondaily_hire_rateChanged();
    partial void OnavailabilityChanging(int value);
    partial void OnavailabilityChanged();
    partial void Oncurrent_cityChanging(string value);
    partial void Oncurrent_cityChanged();
    #endregion
		
		public Vehicle()
		{
			this._Bookings = new EntitySet<Booking>(new Action<Booking>(this.attach_Bookings), new Action<Booking>(this.detach_Bookings));
			this._Manufacturer = default(EntityRef<Manufacturer>);
			this._Model = default(EntityRef<Model>);
			this._VehicleCategory = default(EntityRef<VehicleCategory>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_vehicle_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int vehicle_id
		{
			get
			{
				return this._vehicle_id;
			}
			set
			{
				if ((this._vehicle_id != value))
				{
					this.Onvehicle_idChanging(value);
					this.SendPropertyChanging();
					this._vehicle_id = value;
					this.SendPropertyChanged("vehicle_id");
					this.Onvehicle_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_registration_number", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string registration_number
		{
			get
			{
				return this._registration_number;
			}
			set
			{
				if ((this._registration_number != value))
				{
					this.Onregistration_numberChanging(value);
					this.SendPropertyChanging();
					this._registration_number = value;
					this.SendPropertyChanged("registration_number");
					this.Onregistration_numberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_manufacturer_code", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string manufacturer_code
		{
			get
			{
				return this._manufacturer_code;
			}
			set
			{
				if ((this._manufacturer_code != value))
				{
					if (this._Manufacturer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onmanufacturer_codeChanging(value);
					this.SendPropertyChanging();
					this._manufacturer_code = value;
					this.SendPropertyChanged("manufacturer_code");
					this.Onmanufacturer_codeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_model_code", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string model_code
		{
			get
			{
				return this._model_code;
			}
			set
			{
				if ((this._model_code != value))
				{
					if (this._Model.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onmodel_codeChanging(value);
					this.SendPropertyChanging();
					this._model_code = value;
					this.SendPropertyChanged("model_code");
					this.Onmodel_codeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_vehicle_category_code", DbType="VarChar(5) NOT NULL", CanBeNull=false)]
		public string vehicle_category_code
		{
			get
			{
				return this._vehicle_category_code;
			}
			set
			{
				if ((this._vehicle_category_code != value))
				{
					if (this._VehicleCategory.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onvehicle_category_codeChanging(value);
					this.SendPropertyChanging();
					this._vehicle_category_code = value;
					this.SendPropertyChanged("vehicle_category_code");
					this.Onvehicle_category_codeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_manufacturing_date", DbType="VarChar(10)")]
		public string manufacturing_date
		{
			get
			{
				return this._manufacturing_date;
			}
			set
			{
				if ((this._manufacturing_date != value))
				{
					this.Onmanufacturing_dateChanging(value);
					this.SendPropertyChanging();
					this._manufacturing_date = value;
					this.SendPropertyChanged("manufacturing_date");
					this.Onmanufacturing_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_daily_hire_rate", DbType="Decimal(18,0) NOT NULL")]
		public decimal daily_hire_rate
		{
			get
			{
				return this._daily_hire_rate;
			}
			set
			{
				if ((this._daily_hire_rate != value))
				{
					this.Ondaily_hire_rateChanging(value);
					this.SendPropertyChanging();
					this._daily_hire_rate = value;
					this.SendPropertyChanged("daily_hire_rate");
					this.Ondaily_hire_rateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_availability", DbType="Int NOT NULL")]
		public int availability
		{
			get
			{
				return this._availability;
			}
			set
			{
				if ((this._availability != value))
				{
					this.OnavailabilityChanging(value);
					this.SendPropertyChanging();
					this._availability = value;
					this.SendPropertyChanged("availability");
					this.OnavailabilityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_current_city", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string current_city
		{
			get
			{
				return this._current_city;
			}
			set
			{
				if ((this._current_city != value))
				{
					this.Oncurrent_cityChanging(value);
					this.SendPropertyChanging();
					this._current_city = value;
					this.SendPropertyChanged("current_city");
					this.Oncurrent_cityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Vehicle_Booking", Storage="_Bookings", ThisKey="vehicle_id", OtherKey="vehicle_id")]
		public EntitySet<Booking> Bookings
		{
			get
			{
				return this._Bookings;
			}
			set
			{
				this._Bookings.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Manufacturer_Vehicle", Storage="_Manufacturer", ThisKey="manufacturer_code", OtherKey="manufacturer_code", IsForeignKey=true)]
		public Manufacturer Manufacturer
		{
			get
			{
				return this._Manufacturer.Entity;
			}
			set
			{
				Manufacturer previousValue = this._Manufacturer.Entity;
				if (((previousValue != value) 
							|| (this._Manufacturer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Manufacturer.Entity = null;
						previousValue.Vehicles.Remove(this);
					}
					this._Manufacturer.Entity = value;
					if ((value != null))
					{
						value.Vehicles.Add(this);
						this._manufacturer_code = value.manufacturer_code;
					}
					else
					{
						this._manufacturer_code = default(string);
					}
					this.SendPropertyChanged("Manufacturer");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Model_Vehicle", Storage="_Model", ThisKey="model_code", OtherKey="model_code", IsForeignKey=true)]
		public Model Model
		{
			get
			{
				return this._Model.Entity;
			}
			set
			{
				Model previousValue = this._Model.Entity;
				if (((previousValue != value) 
							|| (this._Model.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Model.Entity = null;
						previousValue.Vehicles.Remove(this);
					}
					this._Model.Entity = value;
					if ((value != null))
					{
						value.Vehicles.Add(this);
						this._model_code = value.model_code;
					}
					else
					{
						this._model_code = default(string);
					}
					this.SendPropertyChanged("Model");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="VehicleCategory_Vehicle", Storage="_VehicleCategory", ThisKey="vehicle_category_code", OtherKey="vehicle_category_code", IsForeignKey=true)]
		public VehicleCategory VehicleCategory
		{
			get
			{
				return this._VehicleCategory.Entity;
			}
			set
			{
				VehicleCategory previousValue = this._VehicleCategory.Entity;
				if (((previousValue != value) 
							|| (this._VehicleCategory.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._VehicleCategory.Entity = null;
						previousValue.Vehicles.Remove(this);
					}
					this._VehicleCategory.Entity = value;
					if ((value != null))
					{
						value.Vehicles.Add(this);
						this._vehicle_category_code = value.vehicle_category_code;
					}
					else
					{
						this._vehicle_category_code = default(string);
					}
					this.SendPropertyChanged("VehicleCategory");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Bookings(Booking entity)
		{
			this.SendPropertyChanging();
			entity.Vehicle = this;
		}
		
		private void detach_Bookings(Booking entity)
		{
			this.SendPropertyChanging();
			entity.Vehicle = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Customer")]
	public partial class Customer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _customer_id;
		
		private string _first_name;
		
		private string _last_name;
		
		private int _age;
		
		private char _gender;
		
		private string _email;
		
		private string _phone_number;
		
		private string _address;
		
		private string _city;
		
		private EntitySet<Booking> _Bookings;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Oncustomer_idChanging(int value);
    partial void Oncustomer_idChanged();
    partial void Onfirst_nameChanging(string value);
    partial void Onfirst_nameChanged();
    partial void Onlast_nameChanging(string value);
    partial void Onlast_nameChanged();
    partial void OnageChanging(int value);
    partial void OnageChanged();
    partial void OngenderChanging(char value);
    partial void OngenderChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void Onphone_numberChanging(string value);
    partial void Onphone_numberChanged();
    partial void OnaddressChanging(string value);
    partial void OnaddressChanged();
    partial void OncityChanging(string value);
    partial void OncityChanged();
    #endregion
		
		public Customer()
		{
			this._Bookings = new EntitySet<Booking>(new Action<Booking>(this.attach_Bookings), new Action<Booking>(this.detach_Bookings));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_customer_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int customer_id
		{
			get
			{
				return this._customer_id;
			}
			set
			{
				if ((this._customer_id != value))
				{
					this.Oncustomer_idChanging(value);
					this.SendPropertyChanging();
					this._customer_id = value;
					this.SendPropertyChanged("customer_id");
					this.Oncustomer_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_first_name", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string first_name
		{
			get
			{
				return this._first_name;
			}
			set
			{
				if ((this._first_name != value))
				{
					this.Onfirst_nameChanging(value);
					this.SendPropertyChanging();
					this._first_name = value;
					this.SendPropertyChanged("first_name");
					this.Onfirst_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_last_name", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string last_name
		{
			get
			{
				return this._last_name;
			}
			set
			{
				if ((this._last_name != value))
				{
					this.Onlast_nameChanging(value);
					this.SendPropertyChanging();
					this._last_name = value;
					this.SendPropertyChanged("last_name");
					this.Onlast_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_age", DbType="Int NOT NULL")]
		public int age
		{
			get
			{
				return this._age;
			}
			set
			{
				if ((this._age != value))
				{
					this.OnageChanging(value);
					this.SendPropertyChanging();
					this._age = value;
					this.SendPropertyChanged("age");
					this.OnageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_gender", DbType="Char(1) NOT NULL")]
		public char gender
		{
			get
			{
				return this._gender;
			}
			set
			{
				if ((this._gender != value))
				{
					this.OngenderChanging(value);
					this.SendPropertyChanging();
					this._gender = value;
					this.SendPropertyChanged("gender");
					this.OngenderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="VarChar(255)")]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_phone_number", DbType="VarChar(15) NOT NULL", CanBeNull=false)]
		public string phone_number
		{
			get
			{
				return this._phone_number;
			}
			set
			{
				if ((this._phone_number != value))
				{
					this.Onphone_numberChanging(value);
					this.SendPropertyChanging();
					this._phone_number = value;
					this.SendPropertyChanged("phone_number");
					this.Onphone_numberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_address", DbType="VarChar(400) NOT NULL", CanBeNull=false)]
		public string address
		{
			get
			{
				return this._address;
			}
			set
			{
				if ((this._address != value))
				{
					this.OnaddressChanging(value);
					this.SendPropertyChanging();
					this._address = value;
					this.SendPropertyChanged("address");
					this.OnaddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_city", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string city
		{
			get
			{
				return this._city;
			}
			set
			{
				if ((this._city != value))
				{
					this.OncityChanging(value);
					this.SendPropertyChanging();
					this._city = value;
					this.SendPropertyChanged("city");
					this.OncityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_Booking", Storage="_Bookings", ThisKey="customer_id", OtherKey="customer_id")]
		public EntitySet<Booking> Bookings
		{
			get
			{
				return this._Bookings;
			}
			set
			{
				this._Bookings.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Bookings(Booking entity)
		{
			this.SendPropertyChanging();
			entity.Customer = this;
		}
		
		private void detach_Bookings(Booking entity)
		{
			this.SendPropertyChanging();
			entity.Customer = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BookingStatus")]
	public partial class BookingStatus : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _booking_status_code;
		
		private string _booking_status_description;
		
		private EntitySet<Booking> _Bookings;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onbooking_status_codeChanging(string value);
    partial void Onbooking_status_codeChanged();
    partial void Onbooking_status_descriptionChanging(string value);
    partial void Onbooking_status_descriptionChanged();
    #endregion
		
		public BookingStatus()
		{
			this._Bookings = new EntitySet<Booking>(new Action<Booking>(this.attach_Bookings), new Action<Booking>(this.detach_Bookings));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_booking_status_code", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string booking_status_code
		{
			get
			{
				return this._booking_status_code;
			}
			set
			{
				if ((this._booking_status_code != value))
				{
					this.Onbooking_status_codeChanging(value);
					this.SendPropertyChanging();
					this._booking_status_code = value;
					this.SendPropertyChanged("booking_status_code");
					this.Onbooking_status_codeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_booking_status_description", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string booking_status_description
		{
			get
			{
				return this._booking_status_description;
			}
			set
			{
				if ((this._booking_status_description != value))
				{
					this.Onbooking_status_descriptionChanging(value);
					this.SendPropertyChanging();
					this._booking_status_description = value;
					this.SendPropertyChanged("booking_status_description");
					this.Onbooking_status_descriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BookingStatus_Booking", Storage="_Bookings", ThisKey="booking_status_code", OtherKey="booking_status_code")]
		public EntitySet<Booking> Bookings
		{
			get
			{
				return this._Bookings;
			}
			set
			{
				this._Bookings.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Bookings(Booking entity)
		{
			this.SendPropertyChanging();
			entity.BookingStatus = this;
		}
		
		private void detach_Bookings(Booking entity)
		{
			this.SendPropertyChanging();
			entity.BookingStatus = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Booking")]
	public partial class Booking : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _booking_id;
		
		private string _booking_status_code;
		
		private int _customer_id;
		
		private int _vehicle_id;
		
		private System.DateTime _pickup_date;
		
		private System.DateTime _return_date;
		
		private string _pickup_city;
		
		private string _return_city;
		
		private EntityRef<BookingStatus> _BookingStatus;
		
		private EntityRef<Customer> _Customer;
		
		private EntityRef<Vehicle> _Vehicle;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onbooking_idChanging(int value);
    partial void Onbooking_idChanged();
    partial void Onbooking_status_codeChanging(string value);
    partial void Onbooking_status_codeChanged();
    partial void Oncustomer_idChanging(int value);
    partial void Oncustomer_idChanged();
    partial void Onvehicle_idChanging(int value);
    partial void Onvehicle_idChanged();
    partial void Onpickup_dateChanging(System.DateTime value);
    partial void Onpickup_dateChanged();
    partial void Onreturn_dateChanging(System.DateTime value);
    partial void Onreturn_dateChanged();
    partial void Onpickup_cityChanging(string value);
    partial void Onpickup_cityChanged();
    partial void Onreturn_cityChanging(string value);
    partial void Onreturn_cityChanged();
    #endregion
		
		public Booking()
		{
			this._BookingStatus = default(EntityRef<BookingStatus>);
			this._Customer = default(EntityRef<Customer>);
			this._Vehicle = default(EntityRef<Vehicle>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_booking_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int booking_id
		{
			get
			{
				return this._booking_id;
			}
			set
			{
				if ((this._booking_id != value))
				{
					this.Onbooking_idChanging(value);
					this.SendPropertyChanging();
					this._booking_id = value;
					this.SendPropertyChanged("booking_id");
					this.Onbooking_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_booking_status_code", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string booking_status_code
		{
			get
			{
				return this._booking_status_code;
			}
			set
			{
				if ((this._booking_status_code != value))
				{
					if (this._BookingStatus.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onbooking_status_codeChanging(value);
					this.SendPropertyChanging();
					this._booking_status_code = value;
					this.SendPropertyChanged("booking_status_code");
					this.Onbooking_status_codeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_customer_id", DbType="Int NOT NULL")]
		public int customer_id
		{
			get
			{
				return this._customer_id;
			}
			set
			{
				if ((this._customer_id != value))
				{
					if (this._Customer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Oncustomer_idChanging(value);
					this.SendPropertyChanging();
					this._customer_id = value;
					this.SendPropertyChanged("customer_id");
					this.Oncustomer_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_vehicle_id", DbType="Int NOT NULL")]
		public int vehicle_id
		{
			get
			{
				return this._vehicle_id;
			}
			set
			{
				if ((this._vehicle_id != value))
				{
					if (this._Vehicle.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onvehicle_idChanging(value);
					this.SendPropertyChanging();
					this._vehicle_id = value;
					this.SendPropertyChanged("vehicle_id");
					this.Onvehicle_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pickup_date", DbType="Date NOT NULL")]
		public System.DateTime pickup_date
		{
			get
			{
				return this._pickup_date;
			}
			set
			{
				if ((this._pickup_date != value))
				{
					this.Onpickup_dateChanging(value);
					this.SendPropertyChanging();
					this._pickup_date = value;
					this.SendPropertyChanged("pickup_date");
					this.Onpickup_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_return_date", DbType="Date NOT NULL")]
		public System.DateTime return_date
		{
			get
			{
				return this._return_date;
			}
			set
			{
				if ((this._return_date != value))
				{
					this.Onreturn_dateChanging(value);
					this.SendPropertyChanging();
					this._return_date = value;
					this.SendPropertyChanged("return_date");
					this.Onreturn_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pickup_city", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string pickup_city
		{
			get
			{
				return this._pickup_city;
			}
			set
			{
				if ((this._pickup_city != value))
				{
					this.Onpickup_cityChanging(value);
					this.SendPropertyChanging();
					this._pickup_city = value;
					this.SendPropertyChanged("pickup_city");
					this.Onpickup_cityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_return_city", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string return_city
		{
			get
			{
				return this._return_city;
			}
			set
			{
				if ((this._return_city != value))
				{
					this.Onreturn_cityChanging(value);
					this.SendPropertyChanging();
					this._return_city = value;
					this.SendPropertyChanged("return_city");
					this.Onreturn_cityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BookingStatus_Booking", Storage="_BookingStatus", ThisKey="booking_status_code", OtherKey="booking_status_code", IsForeignKey=true)]
		public BookingStatus BookingStatus
		{
			get
			{
				return this._BookingStatus.Entity;
			}
			set
			{
				BookingStatus previousValue = this._BookingStatus.Entity;
				if (((previousValue != value) 
							|| (this._BookingStatus.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BookingStatus.Entity = null;
						previousValue.Bookings.Remove(this);
					}
					this._BookingStatus.Entity = value;
					if ((value != null))
					{
						value.Bookings.Add(this);
						this._booking_status_code = value.booking_status_code;
					}
					else
					{
						this._booking_status_code = default(string);
					}
					this.SendPropertyChanged("BookingStatus");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_Booking", Storage="_Customer", ThisKey="customer_id", OtherKey="customer_id", IsForeignKey=true)]
		public Customer Customer
		{
			get
			{
				return this._Customer.Entity;
			}
			set
			{
				Customer previousValue = this._Customer.Entity;
				if (((previousValue != value) 
							|| (this._Customer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Customer.Entity = null;
						previousValue.Bookings.Remove(this);
					}
					this._Customer.Entity = value;
					if ((value != null))
					{
						value.Bookings.Add(this);
						this._customer_id = value.customer_id;
					}
					else
					{
						this._customer_id = default(int);
					}
					this.SendPropertyChanged("Customer");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Vehicle_Booking", Storage="_Vehicle", ThisKey="vehicle_id", OtherKey="vehicle_id", IsForeignKey=true)]
		public Vehicle Vehicle
		{
			get
			{
				return this._Vehicle.Entity;
			}
			set
			{
				Vehicle previousValue = this._Vehicle.Entity;
				if (((previousValue != value) 
							|| (this._Vehicle.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Vehicle.Entity = null;
						previousValue.Bookings.Remove(this);
					}
					this._Vehicle.Entity = value;
					if ((value != null))
					{
						value.Bookings.Add(this);
						this._vehicle_id = value.vehicle_id;
					}
					else
					{
						this._vehicle_id = default(int);
					}
					this.SendPropertyChanged("Vehicle");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
